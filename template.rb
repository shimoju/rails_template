# Ask
# ==============================================================================
use = {}
use[:heroku] = yes?('Use Heroku?')
use[:puma] = yes?('Use Puma as the app server?')
use[:devise] = yes?('Use devise?')
use[:root] = yes?('Generate welcome#index as root path?')
use[:travis] = yes?('Use Travis CI?')

# Git
# ==============================================================================
# .gitignore
append_to_file '.gitignore' do
%q{
.DS_Store
**.orig
/vendor/bundle
/spec/tmp
/coverage
.env*
}
end

# Initial commit
git :init
git add: '.'
git commit: %Q{ -m 'Initial commit' }

# Gems
# ==============================================================================
# Specify Ruby version
prepend_to_file 'Gemfile', "ruby '#{RUBY_VERSION}'\n"

# Don't use SQLite in production
gsub_file 'Gemfile', "gem 'sqlite3'", "gem 'sqlite3', group: [:development, :test]"

# Add Gems
# Process manager
gem 'foreman', require: false
# App server
gem 'puma', require: false if use[:puma]

# Template engine
gem 'slim-rails'
# Authentication solution
gem 'devise' if use[:devise]
gem 'devise-i18n' if use[:devise]

gem_group :production do
  gem 'pg' if use[:heroku]
  gem 'rails_12factor' if use[:heroku]
end

gem_group :test do
  # Acceptance test framework
  gem 'capybara'
  # A PhantomJS driver for Capybara
  gem 'poltergeist'
  # Database cleaner
  gem 'database_rewinder'
  # save_and_open_page
  gem 'launchy'
  # Generate fake data
  gem 'faker'
  # Code coverage analysis tool
  gem 'simplecov', require: false
end

gem_group :development, :test do
  # Testing framework
  gem 'rspec-rails'
  # Fixtures replacement
  gem 'factory_girl_rails'
  # Autoload .env
  gem 'dotenv-rails'
  # irb alternative
  gem 'pry-rails'
  gem 'pry-byebug'
  gem 'pry-coolline'
  gem 'pry-doc'
  gem 'pry-stack_explorer'
  # Format query log
  gem 'hirb-unicode'
  # Pretty prints
  gem 'awesome_print'
end

gem_group :development do
  # Schema Information
  gem 'annotate'
  # Turns off the asset pipeline log
  gem 'quiet_assets'
  # Spring additional commands
  gem 'spring-commands-rspec'
  # I18n locale files generators
  gem 'i18n_generators'
  # Handle events on file system modifications
  gem 'guard'
  gem 'terminal-notifier'
  gem 'terminal-notifier-guard'
  gem 'guard-livereload', require: false
  gem 'guard-pow', require: false
  gem 'guard-rspec', require: false
  # Convert ERB to Slim
  gem 'html2slim', require: false
end

# Use Rails Assets
append_to_file 'Gemfile' do
%q{
source 'https://rails-assets.org' do
end
}
end

gsub_file 'Gemfile', '"', "'"

# Run bundle
# ==============================================================================
run 'bundle install --without production'

# Config Application
# ==============================================================================
# Create files
# ------------------------------------------------------------------------------
# README
remove_file 'README.rdoc'
create_file 'README.md', "# #{app_name.classify}\n"
# Foreman
create_file 'Procfile', "web: bundle exec rails server -p $PORT\n"
create_file '.env' do
%q{# Add application configuration variables here, as shown below.
# Set the value generated by `bundle exec rake secret`
SECRET_KEY_BASE=your_secret_key
}
end
# Specify Ruby version
create_file '.ruby-version', "#{RUBY_VERSION}\n"

# application.rb
# ------------------------------------------------------------------------------
application do
 %q{# Config Generators
    config.generators do |g|
      g.test_framework :rspec,
        # controller_specs: false,
        # helper_specs: false,
        request_specs: false,
        routing_specs: false,
        view_specs: false
    end
}
end

# SSL
# ------------------------------------------------------------------------------
uncomment_lines 'config/environments/production.rb', 'config.force_ssl = true'

# Mailer
# ------------------------------------------------------------------------------
environment "config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }\n", env: 'development'

# Server
# ------------------------------------------------------------------------------
if use[:puma]
  remove_file 'Procfile'
  create_file 'Procfile', "web: bundle exec puma -C config/puma.rb\n"
  create_file 'config/puma.rb' do
%q{# https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server
workers Integer(ENV['WEB_CONCURRENCY'] || 2)
threads_count = Integer(ENV['MAX_THREADS'] || 5)
threads threads_count, threads_count

preload_app!

rackup      DefaultRackup
port        ENV['PORT']     || 3000
environment ENV['RACK_ENV'] || 'development'

on_worker_boot do
  # Worker specific setup for Rails 4.1+
  # See: https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#on-worker-boot
  ActiveRecord::Base.establish_connection
end
}
  end
  append_to_file 'config/database.yml' do
%q{  url:  <%= ENV["DATABASE_URL"] %>
  pool: <%= ENV["DB_POOL"] || ENV['MAX_THREADS'] || 5 %>
}
  end
  append_to_file '.env' do
%q{
# Puma
WEB_CONCURRENCY=2
MAX_THREADS=5
}
  end
end

# Config Gems
# ==============================================================================
# RSpec
# ------------------------------------------------------------------------------
generate 'rspec:install'
remove_dir 'test'
append_to_file '.rspec', "--format documentation\n"

# DatabaseRewinder
# ------------------------------------------------------------------------------
gsub_file 'spec/rails_helper.rb', "config.use_transactional_fixtures = true", "config.use_transactional_fixtures = false"
insert_into_file 'spec/rails_helper.rb', after: "RSpec.configure do |config|\n" do
%q{
  config.before :suite do
    DatabaseRewinder.clean_all
  end

  config.after :each do
    DatabaseRewinder.clean
  end

}
end

# factory_girl
# ------------------------------------------------------------------------------
insert_into_file 'spec/rails_helper.rb', after: "RSpec.configure do |config|\n" do
  "  config.include FactoryGirl::Syntax::Methods\n"
end
insert_into_file 'spec/rails_helper.rb', after: "config.before :suite do\n" do
  "    FactoryGirl.reload\n"
end

# SimpleCov
# ------------------------------------------------------------------------------
prepend_to_file 'spec/rails_helper.rb', "require 'simplecov'\n\n"
create_file '.simplecov', "SimpleCov.start 'rails'\n"

# Capybara
# ------------------------------------------------------------------------------
insert_into_file 'spec/rails_helper.rb', after: "require 'rspec/rails'\n" do
  "require 'capybara/rails'\nrequire 'capybara/rspec'\n"
end
# Poltergeist
insert_into_file 'spec/rails_helper.rb', after: "require 'capybara/rspec'\n" do
  "require 'capybara/poltergeist'\nCapybara.javascript_driver = :poltergeist\n"
end

# Annotate
# ------------------------------------------------------------------------------
generate 'annotate:install'

# Guard
# ------------------------------------------------------------------------------
run 'bundle exec guard init'

# Slim
# ------------------------------------------------------------------------------
environment "Slim::Engine.set_options pretty: true, sort_attrs: false\n", env: 'development'
# Convert application.html.erb to Slim
run 'bundle exec erb2slim --delete app/views/layouts/application.html.erb app/views/layouts/application.html.slim'

# devise
# ------------------------------------------------------------------------------
if use[:devise]
  generate 'devise:install'
  insert_into_file 'spec/rails_helper.rb', after: "RSpec.configure do |config|\n" do
    "  config.include Devise::TestHelpers, type: :controller\n"
  end
end

# Root path
# ==============================================================================
if use[:root]
  generate 'controller', 'welcome index'
  uncomment_lines 'config/routes.rb', "root 'welcome#index'"
  comment_lines 'config/routes.rb', "get 'welcome/index'"
end

# Environment variables
# ==============================================================================
# Copy sample file
run 'cp .env sample.env'
# secret_key_base
gsub_file '.env', "your_secret_key\n", `bundle exec rake secret`

# Database
# ==============================================================================
rake 'db:create'
rake 'db:migrate'

# Spring
# ==============================================================================
run 'bundle exec spring binstub --all'
gsub_file 'Guardfile', 'guard :rspec, cmd: "bundle exec rspec" do', "guard :rspec, cmd: 'bin/rspec' do"

# CI
# ==============================================================================
if use[:travis]
  create_file '.travis.yml' do
%Q{language: ruby
rvm:
  - #{RUBY_VERSION}
bundler_args: --without development production --deployment
}
  end
end

# Git commit
# ==============================================================================
git add: '--all'
git commit: %Q{ -m 'Apply template' }
